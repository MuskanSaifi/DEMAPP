// redux/userSlice.js
import { createSlice } from '@reduxjs/toolkit';

// Define the initial state for your user slice
const initialState = {
  user: null, // This will hold the user object, e.g., { _id: '...', fullname: '...', email: '...' }
  token: null, // This will hold the JWT authentication token
};

// Create a Redux slice for user-related state
const userSlice = createSlice({
  name: 'user', // This 'name' property determines the key in your Redux state (e.g., state.user)
  initialState,
  reducers: {
    // Reducer to set the user object AND token in the Redux store
    // This action expects a payload object like: { user: { ...userData }, token: 'your_jwt_string' }
    setReduxUser: (state, action) => {
      state.user = action.payload.user;   // Assign the 'user' object from the payload
      state.token = action.payload.token; // Assign the 'token' string from the payload
    },
    // Reducer to clear the user object and token from the Redux store
    // This action will be dispatched when a user logs out
    clearReduxUser: (state) => {
      state.user = null;
      state.token = null; // Ensure token is also cleared on logout
    },
  },
});

// Export the actions generated by createSlice
export const { setReduxUser, clearReduxUser } = userSlice.actions;

// Export the reducer to be combined in the store
export default userSlice.reducer;
